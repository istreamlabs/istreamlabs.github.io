(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{110:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var a=n(0),i=n.n(a),s=n(125),o=n.n(s),r=n(126),l=n.n(r);function c({github:e,docs:t}){return i.a.createElement("div",{className:"shields"},i.a.createElement("a",{className:"shield",href:e},i.a.createElement(o.a,{fontSize:"small"})," GitHub"),i.a.createElement("a",{className:"shield",href:t},i.a.createElement(l.a,{fontSize:"small"})," Documentation"))}},83:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n(3),i=n(7),s=(n(0),n(93)),o=n(110),r={title:"Go SDK"},l={unversionedId:"sdks/golang",id:"sdks/golang",isDocsHomePage:!1,title:"Go SDK",description:"<Shields",source:"@site/docs/sdks/golang.md",slug:"/sdks/golang",permalink:"/docs/sdks/golang",editUrl:"https://github.com/istreamlabs/docs-portal/edit/main/docs/sdks/golang.md",version:"current",sidebar:"someSidebar",previous:{title:"Javascript SDK",permalink:"/docs/sdks/javascript"},next:{title:"Python SDK",permalink:"/docs/sdks/python"}},c=[{value:"Installation",id:"installation",children:[]},{value:"Hello, Go!",id:"hello-go",children:[]}],u={toc:c};function d(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)(o.a,{github:"https://github.com/istreamlabs/go-sdk",docs:"https://pkg.go.dev/github.com/istreamlabs/go-sdk",mdxType:"Shields"}),Object(s.b)("p",null,"This is the iStreamPlanet SDK for the Go programming language. It is generated from the ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://api.istreamplanet.com/openapi.json"}),"iStreamPlanet OpenAPI")," with ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://openapi-generator.tech/"}),"OpenAPI Generator"),"."),Object(s.b)("h2",{id:"installation"},"Installation"),Object(s.b)("p",null,"Install is optional, as Go will get the required dependencies automatically."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"$ go get github.com/istreamlabs/go-sdk\n")),Object(s.b)("h2",{id:"hello-go"},"Hello, Go!"),Object(s.b)("p",null,"Getting started is easy. Save the following as ",Object(s.b)("inlineCode",{parentName:"p"},"main.go")," making sure to replace the ",Object(s.b)("inlineCode",{parentName:"p"},"CLIENT_ID"),", ",Object(s.b)("inlineCode",{parentName:"p"},"CLIENT_SECRET"),", and ",Object(s.b)("inlineCode",{parentName:"p"},"ORGANIZATION")," with your own string values."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "context"\n    "fmt"\n\n    "github.com/istreamlabs/go-sdk/isp"\n)\n\nfunc main() {\n    // Create a new API client.\n    client := isp.NewWithClientCredentials(CLIENT_ID, CLIENT_SECRET, ORGANIZATION)\n\n    // Get a list of all source summaries. Pagination is handled via the\n    // `ListSourcesAll()` utility. For calls without pagination you can simply\n    // call the `Execute()` method on the request.\n    request := client.SourcesApi.ListSources(context.Background())\n    summaries, _, err := client.ListSourcesAll(request)\n    if err.Error() != "" {\n        panic(err)\n    }\n\n    // For each source, print out its ID and self link.\n    for _, s := range summaries {\n        fmt.Println(s.Id + " " + *s.Self)\n    }\n}\n')),Object(s.b)("p",null,"Run it and see your sources:"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"# Run the main file in the current directory.\n$ go run .\n")))}d.isMDXComponent=!0}}]);