"use strict";(self.webpackChunkdocs_portal=self.webpackChunkdocs_portal||[]).push([[170],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return h}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),s=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(t),h=r,m=d["".concat(u,".").concat(h)]||d[h]||p[h]||l;return t?a.createElement(m,i(i({ref:n},c),{},{components:t})):a.createElement(m,i({ref:n},c))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},58215:function(e,n,t){var a=t(67294);n.Z=function(e){var n=e.children,t=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}},26396:function(e,n,t){t.d(n,{Z:function(){return d}});var a=t(83117),r=t(67294),l=t(72389),i=t(79443);var o=function(){var e=(0,r.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=t(80446),s=t(86010),c="tabItem_1uMI";function p(e){var n,t,a,l=e.lazy,i=e.block,p=e.defaultValue,d=e.values,h=e.groupId,m=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=d?d:f.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),g=(0,u.lx)(v,(function(e,n){return e.value===n.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===p?p:null!=(n=null!=p?p:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=f[0])?void 0:a.props.value;if(null!==b&&!v.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=o(),y=k.tabGroupChoices,N=k.setTabGroupChoices,w=(0,r.useState)(b),C=w[0],T=w[1],I=[],E=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var x=y[h];null!=x&&x!==C&&v.some((function(e){return e.value===x}))&&T(x)}var O=function(e){var n=e.currentTarget,t=I.indexOf(n),a=v[t].value;a!==C&&(E(n),T(a),null!=h&&N(h,a))},D=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=I.indexOf(e.currentTarget)+1;t=I[a]||I[0];break;case"ArrowLeft":var r=I.indexOf(e.currentTarget)-1;t=I[r]||I[I.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":i},m)},v.map((function(e){var n=e.value,t=e.label;return r.createElement("li",{role:"tab",tabIndex:C===n?0:-1,"aria-selected":C===n,className:(0,s.Z)("tabs__item",c,{"tabs__item--active":C===n}),key:n,ref:function(e){return I.push(e)},onKeyDown:D,onFocus:O,onClick:O},null!=t?t:n)}))),l?(0,r.cloneElement)(f.filter((function(e){return e.props.value===C}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==C})}))))}function d(e){var n=(0,l.Z)();return r.createElement(p,(0,a.Z)({key:String(n)},e))}},12729:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return d},contentTitle:function(){return h},metadata:function(){return m},toc:function(){return f},Player:function(){return v},default:function(){return b}});var a,r=t(83117),l=t(80102),i=t(67294),o=t(3905),u=t(26396),s=t(58215),c=t(25108),p=["components"],d={title:"Creating a Channel"},h=void 0,m={unversionedId:"guide/create-channel",id:"guide/create-channel",title:"Creating a Channel",description:"Let's create your first channel! Make sure you have a client set up so you can follow along with the examples below.",source:"@site/docs/guide/create-channel.mdx",sourceDirName:"guide",slug:"/guide/create-channel",permalink:"/docs/guide/create-channel",editUrl:"https://github.com/istreamlabs/docs-portal/edit/main/docs/guide/create-channel.mdx",tags:[],version:"current",frontMatter:{title:"Creating a Channel"},sidebar:"someSidebar",previous:{title:"Choosing a Client",permalink:"/docs/guide/client"},next:{title:"Channel Operations",permalink:"/docs/guide/channel-ops"}},f=[{value:"Choosing a Source",id:"choosing-a-source",children:[],level:2},{value:"Creating a Channel",id:"creating-a-channel",children:[],level:2},{value:"Viewing the Channel",id:"viewing-the-channel",children:[],level:2},{value:"Customizing Channel Settings",id:"customizing-channel-settings",children:[],level:2},{value:"Deleting a Channel",id:"deleting-a-channel",children:[],level:2}],v=function(){var e=(0,i.useState)(""),n=e[0],a=e[1],r=(0,i.useState)(""),l=r[0],u=r[1],s=(0,i.useState)(null),c=s[0],p=s[1];if((0,i.useEffect)((function(){t.e(353).then(t.bind(t,26353)).then((function(e){p(e)}))}),[]),!c)return(0,o.kt)("div",null);var d=c&&c.Replay;return(0,o.kt)("div",null,(0,o.kt)("div",{style:{width:"100%"}},(0,o.kt)("input",{className:"input",placeholder:"Enter playback URL",value:n,onChange:function(e){a(e.target.value)},onKeyDown:function(e){"Enter"==e.key&&u(n)},style:{width:"90%",padding:"8px",border:"none",background:"#eee"}}),(0,o.kt)("button",{className:"button button--primary",onClick:function(){u(n)},style:{width:"10%"}},"Load")),(0,o.kt)(d,{source:l,mdxType:"Replay"}))},g=(a="Replay",{toc:f,Player:v});function b(e){var n=e.components,t=(0,l.Z)(e,p);return(0,o.kt)("wrapper",(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Let's create your first channel! Make sure you have a ",(0,o.kt)("a",{parentName:"p",href:"/docs/guide/client"},"client")," set up so you can follow along with the examples below."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Channel creation is entirely self-service. iStreamPlanet will not stop or cleanup your channels. Every channel you create may incur billing charges, including the demo channel below. View your dashboard to see an overview of charges on your account."))),(0,o.kt)("h2",{id:"choosing-a-source"},"Choosing a Source"),(0,o.kt)("p",null,"Before creating a new channel, you ",(0,o.kt)("em",{parentName:"p"},"must")," have a source to create it from. The source represents the incoming live video feed. First, get a list of sources that you have access to so that you can pick one:"),(0,o.kt)(u.Z,{groupId:"client",defaultValue:"cli",values:[{label:"CLI",value:"cli"},{label:"Javascript",value:"js"},{label:"Go",value:"go"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"cli",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ restish isp list-sources\n\nHTTP/2.0 200 OK\nContent-Encoding: br\nContent-Type: application/cbor\n\n[\n  {\n    id: "stn-abc123"\n    name: "iStreamPlanet Demo 1"\n    self: "https://api.istreamplanet.com/v2/sources/stn-abc123"\n  }\n  {\n    id: "stn-def456"\n    name: "iStreamPlanet Demo 2"\n    self: "https://api.istreamplanet.com/v2/sources/stn-def456"\n  }\n]\n'))),(0,o.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// TODO\n"))),(0,o.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "context"\n    "fmt"\n\n    "github.com/istreamlabs/go-sdk/isp"\n)\n\nfunc main() {\n    // Create a new API client.\n    client := isp.NewWithClientCredentials("CLIENT_ID", "CLIENT_SECRET", "ORGANIZATION")\n\n    // Get a list of all source summaries. Pagination is handled automatically.\n    ctx := context.Background()\n    summaries, _, err := client.SourcesApi.ListSources(ctx).Execute()\n    if err.Error() != "" {\n        panic(err)\n    }\n\n    // For each source, print out its ID and self link.\n    for _, s := range summaries {\n        fmt.Println(s.Id + " " + *s.Self)\n    }\n}\n')))),(0,o.kt)("p",null,"Each returned source has an ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," field. Pick one and we will use it to create a new channel."),(0,o.kt)("h2",{id:"creating-a-channel"},"Creating a Channel"),(0,o.kt)("p",null,"Create a new channel with default settings by passing in your source at creation time. Here we assume that ",(0,o.kt)("inlineCode",{parentName:"p"},"SOURCE_ID")," is the value picked above and ",(0,o.kt)("inlineCode",{parentName:"p"},"CHANNEL_ID")," is the ID you want to use for the channel."),(0,o.kt)(u.Z,{groupId:"client",defaultValue:"cli",values:[{label:"CLI",value:"cli"},{label:"Javascript",value:"js"},{label:"Go",value:"go"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"cli",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ restish isp put-channel $CHANNEL_ID ingest.source.id: $SOURCE_ID\n\nHTTP/2.0 201 Created\nDate: Wed, 23 Dec 2020 22:07:29 GMT\nLocation: /v2/channels/CHANNEL_ID\n")),(0,o.kt)("p",null,"Alternatively you can pass in a JSON representation of the channel you wish to create:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ restish isp put-channel $CHANNEL_ID <input.json\n")),(0,o.kt)("p",null,"Your channel will get created and immediately start encoding and publishing. You can fetch the channel to see its configuration details:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Via the `Location` header\n$ restish api.istreamplanet.com/v2/channels/CHANNEL_ID\n\n# Via the get operation\n$ restish isp get-channel $CHANNEL_ID\n"))),(0,o.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// TODO\n"))),(0,o.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// Create the request, setting up a basic channel with just a source ID.\nrequest := client.ChannelsApi.PutChannel(context.Background(), "CHANNEL_ID")\n\nbody := isp.PutChannelRequest{}\nbody.Ingest.Source.Id = "SOURCE_ID"\nrequest.PutChannelRequest(body)\n\n// Perform the request and check for errors.\nresp, err := request.Execute()\n\nif err.Error() != "" {\n  panic(err)\n}\n')),(0,o.kt)("p",null,"Your channel will get created and immediately start encoding and publishing. You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"Location")," header from the response to find out the encoding settings and playback URLs:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// Print out the URI for the new channel\'s details.\nfmt.Println(resp.Header.Get("Location"))\n')))),(0,o.kt)("p",null,"Keep your playback URL handy for viewing the running channel."),(0,o.kt)("h2",{id:"viewing-the-channel"},"Viewing the Channel"),(0,o.kt)("p",null,"You can use a tool like ",(0,o.kt)("a",{parentName:"p",href:"https://www.videolan.org/vlc/index.html"},"VLC")," to view your video, or paste it into the embedded video player below:"),(0,o.kt)(v,{mdxType:"Player"}),(0,o.kt)("h2",{id:"customizing-channel-settings"},"Customizing Channel Settings"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"TODO")," This section isn't finished yet!"),(0,o.kt)("h2",{id:"deleting-a-channel"},"Deleting a Channel"),(0,o.kt)("p",null,"When finished, you can stop a channel from publishing by deleting it using either the channel's unique ID or the channel's location URI returned from creating the channel."),(0,o.kt)(u.Z,{groupId:"client",defaultValue:"cli",values:[{label:"CLI",value:"cli"},{label:"Javascript",value:"js"},{label:"Go",value:"go"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"cli",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# If you know the ID:\n$ restish isp delete-channel $CHANNEL_ID\n\n# If you know the location:\n$ restish delete api.istreamplanet.com/v2/channels/...\n"))),(0,o.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// TODO\n"))),(0,o.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// Delete the channel. Set your own CHANNEL_ID!\nrequest := client.ChannelsApi.DeleteChannel(context.Background(), "CHANNEL_ID")\n_, err = request.Execute()\n\nif err.Error() != "" {\n  panic(err)\n}\n')))),(0,o.kt)("p",null,"This covers the most basic channel workflow. Read on to find out how to perform live channel operations in the next section."))}b.isMDXComponent=!0}}]);